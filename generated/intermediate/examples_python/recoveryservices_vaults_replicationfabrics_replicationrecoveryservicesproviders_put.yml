# Adds a recovery services provider.
#
# This script expects that the following environment vars are set:
#
# AZURE_TENANT: your Azure Active Directory tenant id or domain
# AZURE_CLIENT_ID: your Azure Active Directory Application Client ID
# AZURE_SECRET: your Azure Active Directory Application Secret
# AZURE_SUBSCRIPTION_ID: your Azure Subscription Id

import os
import traceback
from azure.common.credentials import ServicePrincipalCredentials
from msrestazure.azure_exceptions import CloudError
from msrestazure.azure_configuration import AzureConfiguration
from msrest.service_client import ServiceClient
from msrest.polling import LROPoller
from msrestazure.polling.arm_polling import ARMPolling
from msrest.pipeline import ClientRawResponse
import uuid

SUBSCRIPTION_ID = os.environ['AZURE_SUBSCRIPTION_ID']
SUBSCRIPTION_NAME = "mysubscription"
RESOURCE_GROUP = "myresourcegroup"
VAULT_NAME = "myvault"
REPLICATION_FABRIC_NAME = "myreplicationfabric"
REPLICATION_RECOVERY_SERVICES_PROVIDER_NAME = "myreplicationrecoveryservicesprovider"

BODY = {
  "properties": {
    "machineName": "vmwareprovider1",
    "authenticationIdentityInput": {
      "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
      "applicationId": "f66fce08-c0c6-47a1-beeb-0ede5ea94f90",
      "objectId": "141360b8-5686-4240-a027-5e24e6affeba",
      "audience": "https://microsoft.onmicrosoft.com/cf19e349-644c-4c6a-bcae-9c8f35357874",
      "aadAuthority": "https://login.microsoftonline.com"
    },
    "resourceAccessIdentityInput": {
      "tenantId": "72f988bf-86f1-41af-91ab-2d7cd011db47",
      "applicationId": "f66fce08-c0c6-47a1-beeb-0ede5ea94f90",
      "objectId": "141360b8-5686-4240-a027-5e24e6affeba",
      "audience": "https://microsoft.onmicrosoft.com/cf19e349-644c-4c6a-bcae-9c8f35357874",
      "aadAuthority": "https://login.microsoftonline.com"
    }
  }
}

API_VERSION = '2018-07-10'

def get_credentials():
    credentials = ServicePrincipalCredentials(
        client_id=os.environ['AZURE_CLIENT_ID'],
        secret=os.environ['AZURE_SECRET'],
        tenant=os.environ['AZURE_TENANT']
    )
    return credentials


def run_example():
    credentials = get_credentials()

    config = AzureConfiguration('https://management.azure.com')
    service_client = ServiceClient(credentials, config)

    query_parameters = {}
    query_parameters['api-version'] = API_VERSION

    header_parameters = {}
    header_parameters['Content-Type'] = 'application/json; charset=utf-8'

    operation_config = {}
    request = service_client.put("/Subscriptions/" + SUBSCRIPTION_N + "/resourceGroups/" + RESOURCE_GR + "/providers/Microsoft.RecoveryServices/vaults/" + VAULT_N + "/replicationFabrics/" + REPLICATION_FABRIC_N + "/replicationRecoveryServicesProviders/" + REPLICATION_RECOVERY_SERVICES_PROVIDER_N, query_parameters)
    response = service_client.send(request, header_parameters, BODY, **operation_config)
    print(response.text)


if __name__ == "__main__":
    run_example()