- import_playbook: network_virtualnetworks_subnets_put.yml
- import_playbook: batch_batchaccounts_pools_applications_put.yml
- import_playbook: batch_batchaccounts_pools_certificates_put.yml
- import_playbook: batch_batchaccounts_pools_put.yml
- hosts: localhost
  roles:
    - ../modules
  vars_files:
    - _vars.yml
  vars:
    resource_group: myResourceGroup
    batch_account_name: myBatchAccount
    pool_name: myPool
    virtual_network_name: myVirtualNetwork
    subnet_name: mySubnet
    application_name: myApplication
    certificate_name: myCertificate
  tasks:
    - name: CreatePool - Full Example
      azure_rm_resource:
        idempotency: true
        api_version: '2018-12-01'
        resource_group: '{{ resource_group }}'
        provider: Batch
        resource_type: batchAccounts
        resource_name: '{{ batch_account_name }}'
        subresource:
          - type: pools
            name: '{{ pool_name }}'
        body:
          properties:
            displayName: my-pool-name
            vmSize: STANDARD_D4
            interNodeCommunication: Enabled
            maxTasksPerNode: '13'
            taskSchedulingPolicy:
              nodeFillType: Pack
            deploymentConfiguration:
              cloudServiceConfiguration:
                osFamily: '4'
                osVersion: WA-GUEST-OS-4.45_201708-01
            networkConfiguration:
              subnetId: >-
                /subscriptions/{{ subscription_id }}/resourceGroups/{{
                resource_group }}/providers/Microsoft.Network/virtualNetworks/{{
                virtual_network_name }}/subnets/{{ subnet_name }}
              endpointConfiguration:
                inboundNatPools:
                  - name: testnat
                    protocol: TCP
                    backendPort: '12001'
                    frontendPortRangeStart: '15000'
                    frontendPortRangeEnd: '15100'
                    networkSecurityGroupRules:
                      - access: Allow
                        sourceAddressPrefix: 192.100.12.45
                        priority: '150'
                      - access: Deny
                        sourceAddressPrefix: '*'
                        priority: '3500'
            scaleSettings:
              fixedScale:
                targetDedicatedNodes: '6'
                targetLowPriorityNodes: '28'
                resizeTimeout: PT8M
                nodeDeallocationOption: TaskCompletion
            metadata:
              - name: metadata-1
                value: value-1
              - name: metadata-2
                value: value-2
            startTask:
              commandLine: cmd /c SET
              resourceFiles:
                - httpUrl: 'https://testaccount.blob.core.windows.net/example-blob-file'
                  filePath: 'c:\temp\gohere'
                  fileMode: '777'
              environmentSettings:
                - name: MYSET
                  value: '1234'
              userIdentity:
                autoUser:
                  scope: Pool
                  elevationLevel: Admin
              maxTaskRetryCount: '6'
              waitForSuccess: true
            userAccounts:
              - name: username1
                password: examplepassword
                elevationLevel: Admin
                linuxUserConfiguration:
                  sshPrivateKey: sshprivatekeyvalue
                  uid: '1234'
                  gid: '4567'
            applicationPackages:
              - id: >-
                  /subscriptions/{{ subscription_id }}/resourceGroups/{{
                  resource_group }}/providers/Microsoft.Batch/batchAccounts/{{
                  batch_account_name }}/pools/{{ pool_name }}/applications/{{
                  application_name }}
                version: asdf
            certificates:
              - id: >-
                  /subscriptions/{{ subscription_id }}/resourceGroups/{{
                  resource_group }}/providers/Microsoft.Batch/batchAccounts/{{
                  batch_account_name }}/pools/{{ pool_name }}/certificates/{{
                  certificate_name }}
                storeLocation: LocalMachine
                storeName: MY
                visibility:
                  - RemoteUser
            applicationLicenses:
              - app-license0
              - app-license1
